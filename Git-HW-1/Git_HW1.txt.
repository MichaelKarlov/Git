GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.


Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON. —  В разделе репозитории нажать на New, далее создать название репозитория, далее нажать Create repository
 5. Клонировать репозиторий JSON на локальный компьютер —  git clone https://github.com/MichaelKarlov/JSON.git
 6. Внутри локального JSON создать файл “new.json”. — cat > new.json
 7. Добавить файл под гит. — git add .
 8. Закоммитить файл. — git commit -m "add json file"
 9. Отправить файл на внешний GitHub репозиторий. — git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. — vim new.json
 {
	"name" : "Карлов Михаил Федорович",
	"age"  : 27,
	"pets" : 0,
	"salaty": 100.000
}
 11. Отправить изменения на внешний репозиторий. — git commit -am "change json file"  git push -f
 12. Создать файл preferences.json — cat > preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON. — vim preferences.json
 {
"favotie movie" : "the gentlemen",
"favorite series" : "snowpiercer",
"favorite food" : "fride potatos",
"favorite season": "summer,winter",
"counrty to visit": "USA,france,japan"
 }

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON — vim skills.json
 { 
"skill 1" : "Terminal Linux",
"skill 2" : "SQL",
"skill 3" : "Git",
"skill 4" : "Postman",
"skill 5" : "Clien-server architecture",
"skill 6" : "Mobile testing"
}
 15. Отправить сразу 2 файла на внешний репозиторий. — git add .  git commit -m "add new files"  git push
 16. На веб интерфейсе создать файл bug_report.json. внутри JSON нажать Add file, далее Create new file, далее Commit changes.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. Commit changes
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. — зайти в файл bug_report.json, далее нажать edit file.
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. — commit changes Update Bag_report.json
 20. Синхронизировать внешний и локальный репозиторий JSON — git pull


==================================================================================================================================================================================================================

XML
 21. Создать внешний репозиторий c названием XML. — В разделе репозитории нажать на New, далее создать название репозитория, далее нажать Create repository
 22. Клонировать репозиторий XML на локальный компьютер. — git clone https://github.com/MichaelKarlov/XML.git
 23. Внутри локального XML создать файл “new.xml”. — cat > new.xml
 24. Добавить файл под гит. — git add .
 25. Закоммитить файл. — git commit -m "add xml file"
 26. Отправить файл на внешний GitHub репозиторий. — git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML. — vim new.xml
 
<?xml version="1.0" encoding="UTF-8"?>
<Information-about-me>
	<name> Карлов Михаил Федорович </name>
	<age> 27 </age>
	<pest> 0 </pets>
	<salary> 100.000 </salary>
</Information-about-me>

 28. Отправить изменения на внешний репозиторий. — git commit -am "change xml file"  git push -f
 29. Создать файл preferences.xml — cat > preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML. — vim preferences.xml
 
<?xml version="1.0" encoding="UTF-8 " ?>
<My-preferences>
	<fav-movie><b>  the gentlemen </b></fav-movie>
	<fav-series><b> snowpiercer </b></fav-series>
	<fav-food><b> fried potatos </b></fav-food>
	<fav-season><b> summer,winter </b><fav-season>
	<countries><b> USA,France,Japan </b></countries>
</My-preferences>
 
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML — vim skills.xml
 
<?xml version="1.0" encoding="UTF-8 " ?>
<Skills>
	<skill-1> Terminal Linux </skill-1>
	<skill-2> SQL </skill-2>
	<skill-3> Git </skill-3>
	<skill-4> Postman </skill-4>
	<skill-5> Client-server architecture </skill-5>
	<skill-6> Mobile testing </skill-6>
</Skills>

 32. Сделать коммит в одну строку. — git add . | git commit -m "add new XML files"
 33. Отправить сразу 2 файла на внешний репозиторий. — git push
 34. На веб интерфейсе создать файл bug_report.xml. — внутри XML нажать Add file, далее Create new file, далее Commit changes
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. — commit changes Create Bag_report.xml
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. — зайти в файл bug_report.xml, далее нажать edit file. 
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. — Commit changes Update Bag_report.xml
 38. Синхронизировать внешний и локальный репозиторий XML — git pull


==================================================================================================================================================================================================================

TXT
 1. Создать внешний репозиторий c названием TXT. — В разделе репозитории нажать на New, далее создать название репозитория, далее нажать Create repository
 2. Клонировать репозиторий TXT на локальный компьютер. — git clone https://github.com/MichaelKarlov/TXT.git
 3. Внутри локального TXT создать файл “new.txt”. cat > new.txt
 4. Добавить файл под гит.— git add .
 5. Закоммитить файл. — git commit -m "add new txt file"
 6. Отправить файл на внешний GitHub репозиторий. — git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT. — vim new.txt 
—
 
 ФИО : Карлов Михаил Федорович
 Возраст : 27
 Кол-во домашних животных : 0
 Будущая желаемая зп : 100.000
 
 8. Отправить изменения на внешний репозиторий. — git commit -am "change txt file"  git push -f
 9. Создать файл preferences.txt — cat > preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. — vim preferences.txt
 
 Любимый фильм : Джентельмены
 Любимый сериал : Сквозь снег
 Любимая еда : Жареная картошка
 Любимое время года : лето,зима
 Страны : США, Франция, Япония

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT — vim skills.txt
  
 Скиллы которые будут изучены:
* Terminal Linux;
* SQL;
* Git;
* Postman;
* Client-server architecture;
* Mobile testing.

 12. Сделать коммит в одну строку. git add . | git commit -m "add txt files"
 13. Отправить сразу 2 файла на внешний репозиторий. — git push
 14. На веб интерфейсе создать файл bug_report.txt. — внутри TXT нажать Add file, далее Create new file, далее Commit changes
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе. — Commit changes
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.— зайти в файл bug_report.txt, далее нажать edit file.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. — Commite changes  Update Bag_report.txt
 18. Синхронизировать внешний и локальный репозиторий TXT — git pull
